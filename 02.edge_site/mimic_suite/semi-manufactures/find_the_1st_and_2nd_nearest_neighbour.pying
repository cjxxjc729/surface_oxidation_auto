#!/public1/soft/python/3.7.3/bin/python

#filename=input("enter the originial filename: ")
filename="NO2.pw.out"
from ase.io import write
from ase.io import read
#from ase.geometry.analysis import Analysis
from ase import neighborlist
import numpy as np

atoms=read(filename)
cutOff = neighborlist.natural_cutoffs(atoms)
min_len_indices=1
a=1
while (min_len_indices<2):
  print("circle" + str(a))
  nl = neighborlist.NeighborList(cutOff, self_interaction=False,bothways=True)
  nl.update(atoms)
  for i in range(len(atoms)):
    indices, offsets = nl.get_neighbors(i)
    if i==1:
      min_len_indices=len(indices)
    if len(indices)<min_len_indices:
      min_len_indices=len(indices)
    print(str(indices))  
  cutoff=[]
  for j in cutOff:
    cutoff.append(j+0.02)
  cutOff=cutoff
  a=a+1

#get the right indices

for i in range(len(atoms)):
  indices, offsets = nl.get_neighbors(i)
  #print(atoms.get_chemical_symbols()[indices])
  index_dis=[]
  for index in indices:
    dis=atoms.get_distance(i,index)
    index_dis.append([index,dis])
  index_dis=np.array(index_dis)
  #print("index_dis before sort:")
  #print(index_dis)
  #print(np.argsort(index_dis[:,1]))
  index_dis=index_dis[np.argsort(index_dis[:,1])][0:2,0]
  #print("index_dis after sort:")
  print("nearest atoms for"+ str(i) +" are")
  print(index_dis)

